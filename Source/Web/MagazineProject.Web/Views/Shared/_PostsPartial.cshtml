@model PagedList.IPagedList<BasePostViewModel>
@using System.Linq
@using MagazineProject.Common
@using PagedList.Mvc;

@section styles
{
    @Styles.Render("~/Content/PagedList")
}

@{
    ViewBag.Title = "";
}

<div id="searchResults">
    <div class="row">
        @for (int i = 0; i < Model.Count; i++)
        {
            <div class="col-md-4">
                <div class="thumbnail">
                    <img src="@Url.Action("ThumbnailPostCoverImage", "Images", new {area = "", id = @Model[i].Id})" class="img-responsive" />
                    <div class="caption">
                        <h3>
                            @Model[i].Title.Chop(23)
                        </h3>
                        <p align="center">
                            @Html.ActionLink("More Details", "Details", "Posts", new { area = string.Empty, id = Model[i].Id, postTitle = Model[i].Title.Replace(" ", "-") }, new { @class = "btn btn-primary btn-block" })
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row text-center">
        <ul class="pagination">
            <li>
                @if (ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString() == GlobalConstants.PostsByCategoryAction)
                {
                    @Html.PagedListPager(Model, page => Url.Action("PostsByCategory", "Posts", new { page}),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "posts",
                }))
                }
                @if (ViewContext.RouteData.Values["controller"].ToString() == GlobalConstants.UserPostsController)
                {
                    @Html.PagedListPager(Model, page => Url.Action("Index", "UserPosts", new { area = "Users", page = page }),
                    PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "posts",
                }))
                }
                @if (ViewContext.Controller.ValueProvider.GetValue("action").RawValue.ToString() == "Index" &&
                ViewContext.RouteData.Values["controller"].ToString() == GlobalConstants.HomeController)
                {
                    @Html.PagedListPager(Model, page => Url.Action("Index", "Home", new { page = page }),
                PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(new AjaxOptions()
                {
                    HttpMethod = "GET",
                    UpdateTargetId = "posts",
                }))
                }
            </li>
        </ul>
    </div>
</div>






